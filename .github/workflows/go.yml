#
# BEWARE: Do not use unofficial github actions as the version tag could be
# changed to a malicious commit. If necessary prefer to fork the action.
#

name: Go Build and Release

on:
  push:
    branches: ["master"]
    tags:
      - "v*.*.*"
  pull_request:
    branches: ["master"]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: fastburn-windows
            asset_name: fbn.exe
            release_asset_suffix: windows.exe
          - os: ubuntu-latest
            artifact_name: fastburn-linux
            asset_name: fbn
            release_asset_suffix: linux

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.4'

      - name: Build
        run: go build -v -o ./${{ matrix.asset_name  }} ./cmd/fastburn

      - name: Test
        run: go test -v ./...

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.asset_name }}
          #retention-days: 5

  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    outputs:
       upload_url: ${{ steps.create_release.outputs.upload_url }}
       version: ${{ steps.version.outputs.version }}

    steps:
      - name: Set version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Create Release
        id: create_release
        uses: DFIR-ORC/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

  upload-release:
    needs: [create-release]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        include:
          - artifact_name: fastburn-windows
            asset_name: fbn.exe
            release_asset_suffix: windows-x64.exe
          - artifact_name: fastburn-linux
            asset_name: fbn
            release_asset_suffix: linux-x64

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}

      - name: Upload Release Asset
        uses: DFIR-ORC/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}
          asset_name: fbn-${{ needs.create-release.outputs.version }}-${{ matrix.release_asset_suffix }}
          asset_content_type: application/octet-stream
